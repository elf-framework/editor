import{W as p,u as c,c as e,ad as n,j as i,G as r,h as o,i as a,s as h}from"../../../../../Version.833375e0.js";import{P as m}from"../../../../../PageBoard.7638f95d.js";/* empty css                                   */import"../../../../../LayoutManager.3c16e74c.js";function v(){const[l,t]=p(0);return c(()=>{let s;return setTimeout(()=>{s=setInterval(()=>{t(g=>{const d=Math.max(0,Math.min(g+1,100));return d===100&&clearInterval(s),d})},10)},1e3),()=>{s&&clearInterval(s)}},[]),e(i,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:[60,300],position:"relative"}},e("div",{style:{display:"flex",width:240,gap:30}},e("div",null,e(n,{title:"Loading data...",value:l,valueText:`${l}%`}))))}function f(){return e(r,{columns:["50%",1],gap:30},e(i,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"30px 20px",fontSize:13,height:100}},e("div",{style:{display:"flex",gap:30,padding:[20,40],justifyContent:"center",alignItems:"flex-start",height:200}},e(n,{indeterminate:!0,title:"Loading data...",style:{width:400}}))),e("div",null,e("p",null,e("p",null,"A progress bar can be either determinate or indeterminate. By default, progress bars are determinate. Use a determinate progress bar when progress can be calculated against a specific goal (e.g., downloading a file of a known size). Use an indeterminate progress bar when progress is happening but the time or effort to completion can\u2019t be determined (e.g., attempting to reconnect to a server)."))))}function x(){return e(r,{columns:["50%",1],gap:30},e(i,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"30px 20px",fontSize:13,height:100}},e("div",{style:{display:"flex",gap:30,padding:[20,40],justifyContent:"center",alignItems:"flex-start",height:200}},e("div",null,e(n,{title:"Loading data...",value:20,valueText:e(o,{disabled:!0})})))),e("div",null,e("p",null,e("p",null,"Progress bars should have a label that gives context about the operation being performed. Use an ellipsis at the end of the label text to communicate that the process is in progress. In rare cases where context is sufficient and an accessibility expert has reviewed the design, the label could be undefined. These progress bars should still include an aria-label in HTML (depending on the context, \u201Caria-label\u201D or \u201Caria-labelledby\u201D). The label is always placed above the track."))))}function y(){return e(r,{columns:["50%",1],gap:30},e(i,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"30px 20px",fontSize:13,height:100}},e("div",{style:{display:"flex",gap:30,padding:[20,40],justifyContent:"center",alignItems:"flex-start",height:200}},e("div",null,e(n,{title:"Loading data...",value:20,variant:"primary",valueText:"20%"})))),e("div",null,e("p",null,e("p",null,"Progress bars are used to visually show the progression of a system operation such as downloading, uploading, processing, etc. By default, progress bars have a blue fill that shows the progress."))))}function b(){return e(r,{columns:["50%",1],gap:30},e(i,{style:{gap:30,backgroundColor:"var(--color-green-7)",padding:"30px 20px",fontSize:13,height:100}},e("div",{style:{display:"flex",gap:30,padding:[20,40],justifyContent:"center",alignItems:"flex-start",height:200}},e("div",null,e(n,{title:"Loading data...",value:20,variant:"dark",valueText:"20%"})))),e("div",null,e("p",null,e("p",null,"When a progress bar needs to be placed on top of a colored background, use the over background variant. This progress bar uses a static white color regardless of the color theme. Make sure the background offers enough contrast for the progress bar to be legible."))))}function w(){return e(r,{columns:["50%",1],gap:30},e(i,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"30px 20px",fontSize:13}},e("div",{style:{display:"flex",gap:30,flexDirection:"column",padding:[20,70],alignItems:"flex-start"}},["small","medium","large","extra-large"].map(l=>e("div",{style:{display:"flex"}},e("div",{style:{flex:"none",width:100}},e("em",null,l)),e(n,{title:"Loading data...",size:l,value:33}))))),e("div",null,e("p",null,e("p",null,"Badges come in four different sizes: small, medium, large, and extra-large. The small size is the default and most frequently used option. Use the other sizes sparingly to create a hierarchy of importance on a page."))))}function E(){return e(r,{columns:["50%",1],gap:30},e(i,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"30px 20px",fontSize:13,height:200}},e("div",{style:{display:"flex",gap:30,flexDirection:"column",padding:[20,40],justifyContent:"center",alignItems:"flex-start",height:200}},e("div",null,e(n,{title:e(o,{disabled:!0}),value:33,style:{width:200}})),e("div",null,e(n,{title:e(o,{disabled:!0}),value:33,style:{width:240}})))),e("div",null,e("p",null,e("p",null,"The width of a progress bar can be customized appropriately for its context. The default width is size-2400 (192 px on desktop and 240 px on mobile)."))))}function J(){return e(r,{columns:["50%",1],gap:30},e(i,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"30px 20px",fontSize:13,height:100}},e("div",{style:{display:"flex",gap:30,padding:[20,40],justifyContent:"center",alignItems:"flex-start",height:200}},e("div",null,e(n,{title:e(o,{disabled:!0}),value:33})))),e("div",null,e("p",null,e("p",null,'Progress bars can have a value label that gives detailed information about the progress (e.g. "60%" or "2 of 8"). This value label works alongside the label and should not be displayed if the label itself is not displayed. It should also not be displayed if the progress is indeterminate. Similar to the label, the value label is always placed above the track.'))))}function k(){return e(r,{columns:["50%",1],gap:30},e(i,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"30px 20px",fontSize:13,height:400}},e("div",{style:{display:"flex",gap:30,padding:[20,40],flexDirection:"column",justifyContent:"center",alignItems:"flex-start",height:200}},e("div",null,e("div",{style:{margin:[10,0]}},e("strong",null,"Example: file upload"),e("div",null,"\xA0"),e("div",null,"Value: 15"),e("div",null,"Min value: 0"),e("div",null,"Max value: 18")),e(n,{title:"Loading data...",value:15})),e("div",null,e("div",{style:{margin:[10,0]}},e("strong",null,"Example: filter processing"),e("div",null,"\xA0"),e("div",null,"Value: 0.92"),e("div",null,"Min value: 0"),e("div",null,"Max value: 1")),e(n,{title:"Loading data...",max:1,value:.92})))),e("div",null,e("p",null,e("p",null,"The value is the progress of a system operation (e.g., downloading, uploading, processing) within the progress bar\u2019s range, from the min value to max value."),e("p",null,"The min and max values can also can be customized appropriately for whatever the progress bar is showing. By default, the min value starts at 0 and the max value is set to 100."," "),e("p",null,"These values are not applicable when a progress bar is indeterminate."))))}const C="Progress bar",V="DesignLayout",T="pages/design-system/status/progressbar/page.mdx";function u(l){const t=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3"},l.components);return a.createElementJsx(a.FragmentInstance,null,a.createElementJsx(t.h1,null,C),`
`,a.createElementJsx(t.p,null,"Progress bars show the progression of a system operation: downloading, uploading, processing, etc., in a visual way. They can represent either determinate or indeterminate progress."),`
`,a.createElementJsx(v),`
`,a.createElementJsx(t.h2,null,"Options"),`
`,a.createElementJsx(t.h3,null,"Default variant"),`
`,a.createElementJsx(y),`
`,a.createElementJsx(t.h3,null,"Over background variant"),`
`,a.createElementJsx(b),`
`,a.createElementJsx(t.h3,null,"Label"),`
`,a.createElementJsx(x),`
`,a.createElementJsx(t.h3,null,"Value, min value, max value"),`
`,a.createElementJsx(k),`
`,a.createElementJsx(t.h3,null,"Value label"),`
`,a.createElementJsx(J),`
`,a.createElementJsx(t.h3,null,"width"),`
`,a.createElementJsx(E),`
`,a.createElementJsx(t.h3,null,"Size"),`
`,a.createElementJsx(w),`
`,a.createElementJsx(t.h3,null,"Indeterminate"),`
`,a.createElementJsx(f))}function z(l={}){const{wrapper:t}=l.components||{};return t?a.createElementJsx(t,l,a.createElementJsx(u,l)):u(l)}h(e(m,{layout:V,filename:T,page:z}));
