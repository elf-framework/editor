import{W as o,a4 as a,c as e,a5 as s,a6 as p,h as v,j as c,G as h,a7 as w,i as l,s as y}from"../../../../../Version.833375e0.js";import{P as b}from"../../../../../PageBoard.7638f95d.js";import{l as m}from"../../../../../FolderFilled.88cdad2e.js";import{e as g}from"../../../../../DescriptionFilled.bca31478.js";import{i as d}from"../../../../../ChevronRightFilled.3352a162.js";/* empty css                                   */import"../../../../../LayoutManager.3c16e74c.js";import"../../../../../SvgIcon.59954b01.js";const u=[{id:"1",title:"Item 1",children:[{id:"1.1",title:"Item 1.1 sample text test",children:[{id:"1.1.1",title:"Item 1.1.1"},{id:"1.1.2",title:"Item 1.1.2",selected:!0},{id:"1.1.3",title:"Item 1.1.3",selected:!0},{id:"1.1.4",title:"Item 1.1.4",selected:!0},{id:"1.1.5",title:"Item 1.1.5"},{id:"1.1.6",title:"Item 1.1.6"},{id:"1.1.7",title:"Item 1.1.7"},{id:"1.1.8",title:"Item 1.1.8"},{id:"1.1.9",title:"Item 1.1.9",children:[{id:"1.1.9.1",title:"Item 1.1.9.1"},{id:"1.1.9.2",title:"Item 1.1.9.2"},{id:"1.1.9.3",title:"Item 1.1.9.3"},{id:"1.1.9.4",title:"Item 1.1.9.4"},{id:"1.1.9.5",title:"Item 1.1.9.5"},{id:"1.1.9.6",title:"Item 1.1.9.6"},{id:"1.1.9.7",title:"Item 1.1.9.7"},{id:"1.1.9.8",title:"Item 1.1.9.8"},{id:"1.1.9.9",title:"Item 1.1.9.9"},{id:"1.1.9.10",title:"Item 1.1.9.10"}]},{id:"1.1.10",title:"Item 1.1.5"}]},{id:"1.2",title:"Item 1.2"}]}];function I(){const[r]=o(new a(u));return e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:[0,200],position:"relative",alignItems:"center"}},e("div",{style:{position:"relative",width:300,height:300,flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{draggable:!0,renderContext:i=>{var t;return(t=i.data.children)!=null&&t.length?e(m,null):e(g,null)},renderArrow:()=>e(d,null),items:r.items,onClickNode:i=>{i.data.selected=!i.data.selected,this.refresh()},onToggleNode:i=>{i.data.collapsed=!i.data.collapsed,p()},onDropNode:({startId:i,endId:t,targetPosition:n})=>{switch(n){case"top":r.insertBefore(t,i),p();break;case"bottom":r.insertAfter(t,i),p();break;case"middle":r.insertLast(t,i),p();break}},renderActions:()=>[e(v,{quiet:!0,shape:"square"},"I"),e(v,{quiet:!0,shape:"square"},"II")],overscanRowCount:1})))}function k(){const[r]=o(new a(u));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"60px 20px",fontSize:13}},e("div",null,e("div",{style:{position:"relative",width:300,height:300,margin:"0 auto",flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderArrow:()=>e(d,null),items:r.items})))),e("div",null,e("p",null,"A tree view is text-only by default. This option is best used when a hierarchy consists of all of the same content type.")))}function C(){const[r]=o(new a(u));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"0px 20px",fontSize:13}},e("div",null,e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderContext:i=>{var t;return(t=i.data.children)!=null&&t.length?e(m,null):e(g,null)},renderArrow:()=>e(d,null),items:r.items})))),e("div",null,e("p",null,"Icons can be used to add clarification about tree view items. These help to signify content types, which creates easier reference and context within the hierarchy.")))}function E(){const[r]=o(new a(u));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"0px 20px",fontSize:13}},e("div",null,e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderContext:i=>{const t=i.data.selected?"var(--color-blue-5)":"var(--color-gray-5)";return[e("div",{style:{width:30,height:30,border:"2px solid "+t,backgroundImage:"linear-gradient(45deg, #fff, #fff 25%, "+t+" 25%, "+t+" 50%, #fff 50%, #fff 75%, "+t+" 75%, "+t+")"}},"\xA0"),e("div",{style:{width:30,height:30,border:"2px solid "+t,backgroundImage:"linear-gradient(45deg, #fff, #fff 25%, "+t+" 25%, "+t+" 50%, #fff 50%, #fff 75%, "+t+" 75%, "+t+")"}},"\xA0")]},renderArrow:()=>e(d,null),itemHeight:40,items:r.items})))),e("div",null,e("p",null,"Use thumbnails for when a user needs to have a preview of the content contained in a tree view item. Thumbnails are primarily used in experiences such as layer panels.",e("br",null),"(with itemHeight=",40,")")))}function J(){const[r]=o(new a(u));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"0px 20px",fontSize:13}},e("div",null,e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{variant:"primary",renderContext:i=>{var t;return(t=i.data.children)!=null&&t.length?e(m,null):e(g,null)},renderArrow:()=>e(d,null),items:r.items})))),e("div",null,e("p",null,"By default, a tree view is not emphasized. This is optimal for when it's used with a clear indication of selected items elsewhere in the interface (e.g., a main/detail split view in which the selected item\u2019s label is repeated or clearly indicated in the detail view)."),e("p",null,"The emphasized tree view has a translucent blue background and blue border for its selected state, to provide visual prominence that meets accessible color contrast ratio. This is optimal for when the selection should call attention (e.g., selecting a file to upload from a tree view, or when the tree view is the sole UI element for the interaction with the hierarchical content).")))}const x=[{id:"1",title:"Item 1",children:[{id:"1.1",title:"Item 1.1",children:[{id:"1.1.1",title:"Item 1.1.1"},{id:"1.1.2",title:"Item 1.1.2",selected:!0},{id:"1.1.3",title:"Item 1.1.3"},{id:"1.1.4",title:"Item 1.1.4"},{id:"1.1.5",title:"Item 1.1.5"},{id:"1.1.6",title:"Item 1.1.6"},{id:"1.1.7",title:"Item 1.1.7"},{id:"1.1.8",title:"Item 1.1.8"},{id:"1.1.9",title:"Item 1.1.9",children:[{id:"1.1.9.1",title:"Item 1.1.9.1"},{id:"1.1.9.2",title:"Item 1.1.9.2"},{id:"1.1.9.3",title:"Item 1.1.9.3"},{id:"1.1.9.4",title:"Item 1.1.9.4"},{id:"1.1.9.5",title:"Item 1.1.9.5"},{id:"1.1.9.6",title:"Item 1.1.9.6"},{id:"1.1.9.7",title:"Item 1.1.9.7"},{id:"1.1.9.8",title:"Item 1.1.9.8"},{id:"1.1.9.9",title:"Item 1.1.9.9"},{id:"1.1.9.10",title:"Item 1.1.9.10"}]},{id:"1.1.10",title:"Item 1.1.5"}]},{id:"1.2",title:"Item 1.2"}]}];function T(){const[r]=o(new a(u)),[i]=o(new a(x));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"20px 20px",fontSize:13}},e("div",null,e("em",{style:{padding:"20px 0px"}},"Single Selection"),e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",marginTop:10,borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderContext:t=>{var n;return(n=t.data.children)!=null&&n.length?e(m,null):e(g,null)},renderArrow:()=>e(d,null),items:i.items}))),e("div",null,e("em",{style:{padding:"20px 0px"}},"Multi Selection"),e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",marginTop:10,borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderContext:t=>{var n;return(n=t.data.children)!=null&&n.length?e(m,null):e(g,null)},renderArrow:()=>e(d,null),items:r.items})))),e("div",null,e("p",null,"Tree views have the option of being either single-select or multi-select, for both checkbox and highlight selection styles. The default selection behavior for a multi-select tree view is to toggle selection on and off when selecting an item. The default selection behavior for a single-select tree view is to replace the current selection with the new selection.")))}function A(){const[r]=o(new a(u)),[i]=o(new a(x));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"20px 20px",fontSize:13}},e("div",null,e("em",{style:{padding:"20px 0px"}},"Checkbox Selection"),e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",marginTop:10,borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{selectionStyle:"checkbox",renderContext:t=>{var n;return(n=t.data.children)!=null&&n.length?e(m,null):e(g,null)},renderArrow:()=>e(d,null),items:i.items}))),e("div",null,e("em",{style:{padding:"20px 0px"}},"Highlight Selection"),e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",marginTop:10,borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderContext:t=>{var n;return(n=t.data.children)!=null&&n.length?e(m,null):e(g,null)},renderArrow:()=>e(d,null),items:r.items})))),e("div",null,e("p",null,"Some tree views let a user select items, on which they can then take an action. Both single-select and multi-select tree views can display checkboxes to the far left side of each item, or display only a highlight state. With the checkbox selection style, clicking another tree view item will add that item to the selection. Clicking a selected tree view item will deselect it."),e("p",null,"Sometimes it may not make sense to use checkboxes to indicate selection. In those cases, use the highlight selection style to display a highlighted state when a user is selecting one or more items. With this option, clicking another tree view item will select the new item and deselect any existing selection by default."),e("p",null,"For the highlight selection style, use the emphasized option in order to meet contrast minimums. All tree views have a hover state, regardless if actions or selections can be made.")))}function S(){const[r]=o(new a(u));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"0px 20px",fontSize:13}},e("div",null,e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderContext:i=>{const t=i.data.selected?"var(--color-blue-5)":"var(--color-gray-5)";return e("div",{style:{width:20,height:20,border:"2px solid "+t,backgroundImage:"linear-gradient(45deg, #fff, #fff 25%, "+t+" 25%, "+t+" 50%, #fff 50%, #fff 75%, "+t+" 75%, "+t+")"}},"\xA0")},renderActions:()=>[e(v,{quiet:!0,shape:"square"},"I"),e(v,{quiet:!0,shape:"square"},"II")],renderArrow:()=>e(d,null),items:r.items})))),e("div",null,e("p",null,"The actions area is reserved for an action button or action group. This area houses actions that can be taken on the tree view item.")))}function L(){const[r]=o(new a(u));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"0px 20px",fontSize:13}},e("div",null,e("div",{style:{position:"relative",width:200,height:200,margin:"0 auto",flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderContext:i=>{const t=i.data.selected?"var(--color-blue-5)":"var(--color-gray-5)";return e("div",{style:{width:20,height:20,border:"2px solid "+t,backgroundImage:"linear-gradient(45deg, #fff, #fff 25%, "+t+" 25%, "+t+" 50%, #fff 50%, #fff 75%, "+t+" 75%, "+t+")"}},"\xA0")},renderArrow:()=>e(d,null),itemHeight:40,items:r.items})))),e("div",null,e("p",null,"When a tree view item label is too long for the available horizontal space, the label truncates. The full label is displayed on hover and focus within a tooltip.")))}function z(){const[r]=o(new a(u));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"0px 20px",fontSize:13}},e("div",null,e("div",{style:{position:"relative",width:200,height:200,margin:"0 auto",flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderContext:i=>{const t=i.data.selected?"var(--color-blue-5)":"var(--color-gray-5)";return e("div",{style:{width:20,height:20,border:"2px solid "+t,backgroundImage:"linear-gradient(45deg, #fff, #fff 25%, "+t+" 25%, "+t+" 50%, #fff 50%, #fff 75%, "+t+" 75%, "+t+")"}},"\xA0")},renderArrow:()=>e(d,null),showTooltip:!0,itemHeight:40,items:r.items})))),e("div",null,e("p",null,"When a label's length is too long to display within the tree view, the text will truncate at the end using an ellipsis. Hovering over or focusing on the truncated tree view item should reveal a tooltip that shows the full text of the label.")))}const R=[{id:"1",title:"Item 1",children:[{id:"1.1",title:"Item 1.1 sample text test",children:[{id:"1.1.1",title:"Item 1.1.1"},{id:"1.1.2",title:"Item 1.1.2",loading:!0},{id:"1.1.3",title:"Item 1.1.3"},{id:"1.1.4",title:"Item 1.1.4"},{id:"1.1.5",title:"Item 1.1.5"},{id:"1.1.6",title:"Item 1.1.6"},{id:"1.1.7",title:"Item 1.1.7"},{id:"1.1.8",title:"Item 1.1.8"},{id:"1.1.9",title:"Item 1.1.9",children:[{id:"1.1.9.1",title:"Item 1.1.9.1"},{id:"1.1.9.2",title:"Item 1.1.9.2"},{id:"1.1.9.3",title:"Item 1.1.9.3"},{id:"1.1.9.4",title:"Item 1.1.9.4"},{id:"1.1.9.5",title:"Item 1.1.9.5"},{id:"1.1.9.6",title:"Item 1.1.9.6"},{id:"1.1.9.7",title:"Item 1.1.9.7"},{id:"1.1.9.8",title:"Item 1.1.9.8"},{id:"1.1.9.9",title:"Item 1.1.9.9"},{id:"1.1.9.10",title:"Item 1.1.9.10"}]},{id:"1.1.10",title:"Item 1.1.5"}]},{id:"1.2",title:"Item 1.2"}]}];function V(){const[r]=o(new a(R));return e(h,{columns:["50%",1],gap:30},e(c,{style:{gap:30,backgroundColor:"var(--color-gray-0)",padding:"0px 20px",fontSize:13}},e("div",null,e("div",{style:{position:"relative",width:300,height:200,margin:"0 auto",flex:"none",borderLeft:"1px solid var(--color-gray-4)",borderRight:"1px solid var(--color-gray-4)"}},e(s,{renderArrow:()=>e(d,null),renderLoading:()=>e("div",null,e("em",null,e(w,{animated:!0,size:"small"})," Loading...")),itemHeight:40,items:r.items})))),e("div",null,e("p",null,"Use thumbnails for when a user needs to have a preview of the content contained in a tree view item. Thumbnails are primarily used in experiences such as layer panels.",e("br",null),"(with itemHeight=",40,")")))}const q="Tree view",H="DesignLayout",B="pages/design-system/navigations/treeview/page.mdx";function f(r){const i=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3"},r.components);return l.createElementJsx(l.FragmentInstance,null,l.createElementJsx(i.h1,null,q),`
`,l.createElementJsx(i.p,null,"A tree view provides users with a way to navigate nested hierarchical information."),`
`,l.createElementJsx(I),`
`,l.createElementJsx(i.h2,null,"Options"),`
`,l.createElementJsx(i.h3,null,"Text only"),`
`,l.createElementJsx(k),`
`,l.createElementJsx(i.h3,null,"Icons"),`
`,l.createElementJsx(C),`
`,l.createElementJsx(i.h3,null,"Thumbnails"),`
`,l.createElementJsx(E),`
`,l.createElementJsx(i.h3,null,"Emphasis"),`
`,l.createElementJsx(J),`
`,l.createElementJsx(i.h3,null,"Selection"),`
`,l.createElementJsx(T),`
`,l.createElementJsx(i.h3,null,"Checkbox or highlight selection style"),`
`,l.createElementJsx(A),`
`,l.createElementJsx(i.h3,null,"Actions area"),`
`,l.createElementJsx(S),`
`,l.createElementJsx(i.h3,null,"Text overflow"),`
`,l.createElementJsx(L),`
`,l.createElementJsx(i.h3,null,"Loading"),`
`,l.createElementJsx(V),`
`,l.createElementJsx(i.h3,null,"Show truncated labels in tooltip"),`
`,l.createElementJsx(z))}function D(r={}){const{wrapper:i}=r.components||{};return i?l.createElementJsx(i,r,l.createElementJsx(f,r)):f(r)}y(e(b,{layout:H,filename:B,page:D}));
